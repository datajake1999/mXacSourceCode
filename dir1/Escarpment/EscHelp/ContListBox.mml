<pageinfo title="ListBox Control"/>
<?include resource=103?>
<<<$TEMPLATE>>>

<!xList>
	<listbox cursel=0 width=100% height=100 MACROATTRIBUTE=1>
		<elem name=1>Item one</elem>
		<elem name=2>Item two</elem>
		<elem name=3>Item three</elem>
		<elem name=4>Item four</elem>
		<elem name=5>Item five</elem>
		<elem name=6>Item six</elem>
		<elem name=7>Item seven</elem>
		<elem name=8>Item eight</elem>
		<elem name=9>Item nine</elem>
		<elem name=10>Item ten</elem>
	</listbox>
</xList>


<xPageTitle>ListBox Control</xPageTitle>

<xSectionTitle>Behavior</xSectionTitle>

<p>
	The listbox control displays a list of items in a rectangular control.
	If the user selects an item the page callback is notified.
</p>


<xSectionTitle>Control-Specific Attributes</xSectionTitle>

<xTableAttributes>
	<tr>
		<xTd1></xTd1>
		<xTd2></xTd2>
		<xTd3>
			See also <a href=r:116>Default Control Behavior</a>.
		</xTd3>
	</tr>
	<tr>
		<xAttribNumber/>
		<xTd2>border</xTd2>
		<xTd3>
			Size of the border (in pixels) of the list.
			<p/>
			Example: border=8
			<p/>
			<xList border=8/>
		</xTd3>
	</tr>
	<tr>
		<xAttribColor/>
		<xTd2>bordercolor</xTd2>
		<xTd3>
			Color of the border in the list box.
			<p/>
			Example: bordercolor=#00ffff
			<p/>
			<xList bordercolor=#00ffff border=8/>
		</xTd3>
	</tr>
	<tr>
		<xAttribColor/>
		<xTd2>color</xTd2>
		<xTd3>
			Background color of the list box. This can be "Transparent".
			<p/>
			Example: color=#00ff00
				<xList color=#00ff00/>
		</xTd3>
	</tr>
	<tr>
		<xAttribNumber/>
		<xTd2>cursel</xTd2>
		<xTd3>
			Currently selected listbox item.
			<p/>
			Example: cursel=4
			<p/>
			<xList cursel=4/>
		</xTd3>
	</tr>
	<tr>
		<xAttribNumber/>
		<xTd2>lrmargin</xTd2>
		<xTd3>
			Left/right margin of the elements in the list-box.
			<p/>
			Example: lrmargin=64
			<p/>
			<xList lrmargin=64/>
		</xTd3>
	</tr>
	<tr>
		<xAttribNumber/>
		<xTd2>scrolly</xTd2>
		<xTd3>
			Number of pixels, from 0+, that the list elements are vertically scrolled.
		</xTd3>
	</tr>
	<tr>
		<xAttribColor/>
		<xTd2>selbordercolor</xTd2>
		<xTd3>
			Border-selection color used in the list.
			<p/>
			Example: selbordercolor=#00ffff
			<p/>
			<xList selbordercolor=#00ffff/>
		</xTd3>
	</tr>
	<tr>
		<xAttribColor/>
		<xTd2>selcolor</xTd2>
		<xTd3>
			Selection color used in the list.
			<p/>
			Example: selcolor=#00ffff
			<p/>
			<xList selcolor=#00ffff/>
		</xTd3>
	</tr>
	<tr>
		<xAttribBool/>
		<xTd2>sort</xTd2>
		<xTd3>
			If TRUE then the list box contents are automatically sorted. Items are sorted by the
			"name=" attributes in each element. Defaults to FALSE.
			<p/>
			Example: sort=TRUE
			<p/>
			<xList sort=TRUE/>
		</xTd3>
	</tr>
	<tr>
		<xAttribNumber/>
		<xTd2>tbmargin</xTd2>
		<xTd3>
			Top/bottom margin of the elements in the list-box.
			<p/>
			Example: tbmargin=16
			<p/>
			<xList tbmargin=16/>
		</xTd3>
	</tr>
	<tr>
		<xAttribString/>
		<xTd2>vscroll</xTd2>
		<xTd3>
			Name of the vertical scrollbar to associate with the list.
			<p/>
			Example: vscroll=vscroll
			<p/>
			<xList width=50% height=100 vscroll=vscroll/>
			<scrollbar height=100 orient=vert name=vscroll/>
		</xTd3>
	</tr>
</xTableAttributes>

<xSectionTitle>Contents</xSectionTitle>

<p>
	The contents of the listbox are a list of &lt;elem&gt; tags. Each &lt;elem&gt; tag must contain an
	attribute, "name" that specified a unique name for the element. If the listbox is set for sorting,
	the "name" attribute is used to sort by. The element tag may also contain "data" with
	some sort of data string.
</p>

<xCode>
	&lt;listbox&gt;<br/>
		&tab;&lt;elem name=1&gt;Item one&lt;/elem&gt;<br/>
		&tab;&lt;elem name=2&gt;Item two&lt;/elem&gt;<br/>
		&tab;&lt;elem name=3&gt;Item three&lt;/elem&gt;<br/>
		&tab;&lt;elem name=4&gt;Item four&lt;/elem&gt;<br/>
		&tab;&lt;elem name=5&gt;Item five&lt;/elem&gt;<br/>
		&tab;&lt;elem name=6&gt;Item six&lt;/elem&gt;<br/>
		&tab;&lt;elem name=7&gt;Item seven&lt;/elem&gt;<br/>
		&tab;&lt;elem name=8&gt;Item eight&lt;/elem&gt;<br/>
		&tab;&lt;elem name=9&gt;Item nine&lt;/elem&gt;<br/>
		&tab;&lt;elem name=10&gt;Item ten&lt;/elem&gt;<br/>
	&lt;/listbox&gt;<br/>
</xCode>
<p> </p>

<xSectionTitle>Control-Specific Messages</xSectionTitle>

<xSectionTitle>ESCM_LISTBOXADD</xSectionTitle>

<p>
	This adds or inserts an item to the list box.  Either pNode or pszText or pszMML must be filled in.
	If it's of pNode it must be of type &lt;elem&gt;; Make sure name= and potentially data= are set.
	If szMML is set, have one or more &lt;elem&gt;xxx&lt;/elem&gt; in the text. Use this to add multiple elements at once.
	If pszText is set then the text displayed will be pszText, the name will be pszText, and the data will be pszText
</p>

<p>
	The ESCMLISTBOXADD structure is:
</p>

<xTableStructure>
	<tr>
		<xVarPCMMLNode/>
		<xTd2>pNode</xTd2>
		<xTd3>
			If not NULL, the node to use for an element. The listbox will NOT delete this.
			It clones the node and uses the clone.
		</xTd3>
	</tr>
	<tr>
		<xVarPWSTR/>
		<xTd2>pszText</xTd2>
		<xTd3>
			If not NULL, this is the Unicode text to use for the new element.
		</xTd3>
	</tr>
	<tr>
		<xVarPWSTR/>
		<xTd2>pszMML</xTd2>
		<xTd3>
			If not NULL, this is the Unicode MML text containing one or more &lt;elem&gt; tags.
		</xTd3>
	</tr>
	<tr>
		<xVarDWORD/>
		<xTd2>dwInsertBefore</xTd2>
		<xTd3>
			The element number to insert before. If this is -1 it adds it to the end of the list. Note:
			Inserting in a sorted listbox does no good.
		</xTd3>
	</tr>
</xTableStructure>

<xSectionTitle>ESCM_LISTBOXDELETE</xSectionTitle>

<p>
	Deletes an element from the listbox.
</p>

<p>
	The ESCMLISTBOXDELETE structure contains:
</p>
<xTableStructure>
	<tr>
		<xVarDWORD/>
		<xTd2>dwIndex</xTd2>
		<xTd3>
			The element number to delete.
		</xTd3>
	</tr>
</xTableStructure>



<xSectionTitle>ESCM_LISTBOXFINDSTRING</xSectionTitle>

<p>
	This searches through the list box looking for an element whose name= attribute matches
	the string.
</p>

<p>
	The ESCMLISTBOXFINDSTRING structure is:
</p>
<xTableStructure>
	<tr>
		<xVarInt/>
		<xTd2>iStart</xTd2>
		<xTd3>
			Zero-based element that occurs before the element to start searching at.
			Set to -1 to search the entire list box. If the search goes beyond then end it will wrap around until it
			hits iStart.
		</xTd3>
	</tr>
	<tr>
		<xVarPWSTR/>
		<xTd2>psz</xTd2>
		<xTd3>
			The string to search for.
		</xTd3>
	</tr>
	<tr>
		<xVarBOOL/>
		<xTd2>fExact</xTd2>
		<xTd3>
			If TRUE, need an exact match. If not, accepts any string that contains the given string.
		</xTd3>
	</tr>
	<tr>
		<xVarDWORD/>
		<xTd2>dwIndex</xTd2>
		<xTd3>
			Filled with the index number of the found element. If an element couldn't be found, this
			is filled with -1.
		</xTd3>
	</tr>
</xTableStructure>

<xSectionTitle>ESCM_LISTBOXGETCOUNT</xSectionTitle>

<p>
	Returns the number of elements in the listbox.
</p>

<p>
	The ESCMLISTBOXGETCOUNT structure is:
</p>
<xTableStructure>
	<tr>
		<xVarDWORD/>
		<xTd2>dwNum</xTd2>
		<xTd3>
			Filled with the number of elements in the listbox.
		</xTd3>
	</tr>
</xTableStructure>


<xSectionTitle>ESCM_LISTBOXGETITEM</xSectionTitle>
<p>
	Gets the name and data of an element.
</p>

<p>
	The ESCMLISTBOXGETITEM structure is:
</p>
<xTableStructure>
	<tr>
		<xVarDWORD/>
		<xTd2>dwIndex</xTd2>
		<xTd3>
			This should contain the element number to get.
		</xTd3>
	</tr>
	<tr>
		<xVarPWSTR/>
		<xTd2>pszName</xTd2>
		<xTd3>
			Filled with a pointer to the name string. This pointer is valid until the element is deleted or
			listbox destroyed. Do not modify the contents of this string.
		</xTd3>
	</tr>
	<tr>
		<xVarPWSTR/>
		<xTd2>pszData</xTd2>
		<xTd3>
			Filled with a pointer to the data string. This pointer is valid until the element is deleted or
			listbox destroyed. Do not modify the contents of this string. If the element doesn't have
			any data then this is NULL.
		</xTd3>
	</tr>
	<tr>
		<xVarRECT/>
		<xTd2>rPage</xTd2>
		<xTd3>
			Filled with a the rectangle where the element appears no the page. Note: The
			element may not be visible because it may be out of range of the control's
			display window.
		</xTd3>
	</tr>
</xTableStructure>



<xSectionTitle>ESCM_LISTBOXRESETCONTENT</xSectionTitle>

<p>
	Clears the contents of the listbox. pParam is NULL.
</p>


<xSectionTitle>ESCM_LISTBOXSELECTSTRING</xSectionTitle>
<p>
	This searches through the list box looking for an element whose name= attribute matches
	the string. It then selects that element.
</p>

<p>
	The ESCMLISTBOXSELECTSTRING structure is:
</p>
<xTableStructure>
	<tr>
		<xVarInt/>
		<xTd2>iStart</xTd2>
		<xTd3>
			Zero-based element that occurs before the element to start searching at.
			Set to -1 to search the entire list box. If the search goes beyond then end it will wrap around until it
			hits iStart.
		</xTd3>
	</tr>
	<tr>
		<xVarPWSTR/>
		<xTd2>psz</xTd2>
		<xTd3>
			The string to search for.
		</xTd3>
	</tr>
	<tr>
		<xVarBOOL/>
		<xTd2>fExact</xTd2>
		<xTd3>
			If TRUE, need an exact match. If not, accepts any string that contains the given string.
		</xTd3>
	</tr>
	<tr>
		<xVarDWORD/>
		<xTd2>dwIndex</xTd2>
		<xTd3>
			Filled with the index number of the found element. If an element couldn't be found, this
			is filled with -1.
		</xTd3>
	</tr>
</xTableStructure>

<xSectionTitle>Control-Specific Notifications</xSectionTitle>

<xSectionTitle>ESCN_LISTBOXSELCHANGE</xSectionTitle>

<p>
	The listbox send an ESCN_LISTBOXSELCHANGE message when a the selection has changed.
	The ESCNLISTBOXSELCHANGE structure contains:
</p>

<xTableStructure>
	<xTrControl/>
	<tr>
		<xVarDWORD/>
		<xTd2>dwCurSel</xTd2>
		<xTd3>
			Filled with the current selection.
		</xTd3>
	</tr>
	<tr>
		<xVarPWSTR/>
		<xTd2>pszName</xTd2>
		<xTd3>
			Filled with a pointer to the name string. This pointer is valid until the element is deleted or
			listbox destroyed. Do not modify the contents of this string.
		</xTd3>
	</tr>
	<tr>
		<xVarPWSTR/>
		<xTd2>pszData</xTd2>
		<xTd3>
			Filled with a pointer to the data string. This pointer is valid until the element is deleted or
			listbox destroyed. Do not modify the contents of this string. If the element doesn't have
			any data then this is NULL.
		</xTd3>
	</tr>
	<tr>
		<xVarDWORD/>
		<xTd2>dwReason</xTd2>
		<xTd3>
			Filled with 0 if the user scrolled with the keyboard. 1 if the user clicked
			the list with a mouse.
		</xTd3>
	</tr>
</xTableStructure>
